@page "/movies/create"
@using Microsoft.EntityFrameworkCore
@using BlazorWebAppCRUD.Models
@inject IDbContextFactory<MovieDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Movie</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Movie" OnValidSubmit="AddMovie" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label> 
                <InputText id="title" @bind-Value="Movie.Title" class="form-control" /> 
                <ValidationMessage For="() => Movie.Title" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="director" class="form-label">Director:</label> 
                <InputText id="director" @bind-Value="Movie.Director" class="form-control" /> 
                <ValidationMessage For="() => Movie.Director" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="releaseyear" class="form-label">ReleaseYear:</label> 
                <InputNumber id="releaseyear" @bind-Value="Movie.ReleaseYear" class="form-control" /> 
                <ValidationMessage For="() => Movie.ReleaseYear" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/movies">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Movie Movie { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddMovie()
    {
        using var context = DbFactory.CreateDbContext();
        context.Movie.Add(Movie);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/movies");
    }
}
